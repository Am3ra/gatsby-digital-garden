{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/templates/page.js"],"names":["IndexPage","data","location","pageQuery","PageTemplate","roamPage","slug","fields","title","dataToNote"],"mappings":"6FAAA,sFAeeA,UANG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzB,OAAO,kBAAC,UAAD,CAAMD,KAAMA,EAAMC,SAAUA,KAO9B,IAAMC,EAAS,a,kCCjBtB,8GAoBeC,UAdM,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBG,EAAWJ,EAAKI,SAEtB,OACE,kBAAC,IAAD,CACEH,SAAUA,EACVI,KAAMD,EAASE,OAAOD,KACtBE,MAAOH,EAASG,OAEhB,kBAAC,IAASC,YAAWR,MAOpB,IAAME,EAAS","file":"component---src-pages-index-js-c5ac9102f7edec95f5f5.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport * as PropTypes from \"prop-types\";\nimport Page from \"../templates/page\";\n\nconst propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nconst IndexPage = ({ data, location }) => {\n  return <Page data={data} location={location} />;\n};\n\nIndexPage.propTypes = propTypes;\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  fragment References on Mdx {\n    outboundReferences {\n      ... on Mdx {\n        body\n        parent {\n          id\n          ... on RoamBlock {\n            uid\n            string\n            fields {\n              parentPage {\n                title\n              }\n              slug\n            }\n          }\n          ... on RoamPage {\n            title\n            fields {\n              slug\n            }\n          }\n          ... on File {\n            fields {\n              slug\n            }\n            childMdx {\n              frontmatter {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n    inboundReferences {\n      ... on Mdx {\n        body\n        parent {\n          id\n          ... on RoamBlock {\n            string\n            fields {\n              parentPage {\n                title\n                fields {\n                  slug\n                }\n              }\n              slug\n            }\n          }\n          ... on RoamPage {\n            title\n            fields {\n              slug\n            }\n          }\n          ... on File {\n            fields {\n              slug\n            }\n            childMdx {\n              frontmatter {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  query {\n    roamPage(title: { eq: \"About these notes\" }) {\n      title\n      childMdx {\n        body\n        ...References\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layouts\";\nimport Note from \"../components/Note\";\nimport { dataToNote } from \"../layouts/data-to-note\";\n\nconst PageTemplate = ({ data, location }) => {\n  const roamPage = data.roamPage;\n\n  return (\n    <Layout\n      location={location}\n      slug={roamPage.fields.slug}\n      title={roamPage.title}\n    >\n      <Note {...dataToNote(data)} />\n    </Layout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    roamPage(id: { eq: $id }) {\n      title\n      childMdx {\n        body\n        ...References\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}