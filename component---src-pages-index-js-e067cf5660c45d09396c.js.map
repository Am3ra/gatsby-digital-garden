{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/templates/page.js"],"names":["IndexPage","data","pageQuery","PageTemplate","roamPage","components","a","props","references","fields","allOutboundReferences","allMarkdown","childMdx","body","inboundReferences"],"mappings":"6FAAA,sFAeeA,UANG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OAAO,kBAAC,UAAD,CAAMA,KAAMA,KAOd,IAAMC,EAAS,a,q6BCkBPC,UAtBM,SAAC,GAAc,IAC5BC,EAD2B,EAAXH,KACAG,SAStB,OACE,kBAAC,IAAD,KACE,kBAAC,cAAD,CAAaC,WAAU,OAAOA,KAAP,IAAmBC,EAT5B,SAACC,GAAD,OAChB,kBAAC,IAAWD,EAAZ,iBACMC,EADN,CAEEC,WAAYJ,EAASK,OAAOC,6BAO1B,kBAAC,cAAD,KAAcN,EAASK,OAAOE,YAAYC,SAASC,OAErD,kBAAC,IAAD,CAAiBL,WAAYJ,EAASK,OAAOK,sBAS5C,IAAMZ,EAAS","file":"component---src-pages-index-js-e067cf5660c45d09396c.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport * as PropTypes from \"prop-types\";\nimport Page from \"../templates/page\";\n\nconst propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nconst IndexPage = ({ data }) => {\n  return <Page data={data} />;\n};\n\nIndexPage.propTypes = propTypes;\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    roamPage(title: { eq: \"About these notes\" }) {\n      fields {\n        allMarkdown {\n          childMdx {\n            body\n          }\n        }\n        allOutboundReferences {\n          ... on RoamBlock {\n            id\n            uid\n            string\n            fields {\n              parentPage {\n                title\n              }\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n          ... on RoamPage {\n            id\n            title\n            fields {\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n        }\n        inboundReferences {\n          ... on RoamBlock {\n            id\n            string\n            fields {\n              parentPage {\n                title\n              }\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n          ... on RoamPage {\n            id\n            title\n            fields {\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport * as PropTypes from \"prop-types\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport components from \"../components/MdxComponents\";\nimport Layout from \"../layouts\";\nimport ReferencesBlock from \"../components/ReferencesBlock\";\n\nconst propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nconst PageTemplate = ({ data }) => {\n  const roamPage = data.roamPage;\n\n  const AnchorTag = (props) => (\n    <components.a\n      {...props}\n      references={roamPage.fields.allOutboundReferences}\n    />\n  );\n\n  return (\n    <Layout>\n      <MDXProvider components={{ ...components, a: AnchorTag }}>\n        <MDXRenderer>{roamPage.fields.allMarkdown.childMdx.body}</MDXRenderer>\n      </MDXProvider>\n      <ReferencesBlock references={roamPage.fields.inboundReferences} />\n    </Layout>\n  );\n};\n\nPageTemplate.propTypes = propTypes;\n\nexport default PageTemplate;\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    roamPage(id: { eq: $id }) {\n      fields {\n        allMarkdown {\n          childMdx {\n            body\n          }\n        }\n        allOutboundReferences {\n          ... on RoamBlock {\n            id\n            uid\n            string\n            fields {\n              parentPage {\n                title\n              }\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n          ... on RoamPage {\n            id\n            title\n            fields {\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n        }\n        inboundReferences {\n          ... on RoamBlock {\n            id\n            string\n            fields {\n              parentPage {\n                title\n              }\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n          ... on RoamPage {\n            id\n            title\n            fields {\n              slug\n              markdown {\n                childMdx {\n                  body\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}