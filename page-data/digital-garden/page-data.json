{"componentChunkName":"component---src-templates-page-js","path":"/digital-garden","result":{"data":{"roamPage":{"title":"digital garden","fields":{"slug":"/digital-garden","allMarkdown":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"digital garden\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://nesslabs.com/mind-garden\"\n  }), \"Mind Garden\"), \"\\xA0in Anne-Laure\\u2019s notes for a deep explanation of digital gardens, how they differ, and why you want to tend one. The quick pitch is:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Composed of atomic notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Densely interlinked\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Concept oriented\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"allOutboundReferences":[],"inboundReferences":[{"__typename":"RoamBlock","id":"3596a040-1c72-552d-8867-7bdfd5492fcf","string":"This is my [[digital garden]] and serve as an example of a library I made to pull [[Roam Research]] content into a [[Gatsby]] website.","fields":{"parentPage":{"title":"About these notes","fields":{"slug":"/About-these-notes"}},"slug":"/azVbNOhMF","markdown":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/digital-garden\",\n    \"title\": \"digital garden\"\n  }), \"[[digital garden]]\"), \" and serve as an example of a library I made to pull \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Roam-Research\",\n    \"title\": \"Roam Research\"\n  }), \"[[Roam Research]]\"), \" content into a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Gatsby\",\n    \"title\": \"Gatsby\"\n  }), \"[[Gatsby]]\"), \" website.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}]}}},"pageContext":{"id":"bae44288-5ec7-5cf5-8adf-ecf20d9d0300"}}}